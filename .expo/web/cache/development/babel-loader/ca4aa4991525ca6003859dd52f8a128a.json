{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport product from \"../../data/product\";\nimport { Picker } from '@react-native-picker/picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ProductScreen = function ProductScreen() {\n  var _useState = useState(product.options ? product.options[0] : null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedOption = _useState2[0],\n      setslectedOption = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      quantity = _useState4[0],\n      setQuantity = _useState4[1];\n\n  console.log(selectedOption);\n  console.log(product.images);\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: product.title\n    }), _jsx(Picker, {\n      selectedValue: setslectedOption,\n      onValueChange: function onValueChange(itemValue) {\n        return setslectedOption(itemValue);\n      },\n      children: product.options.map(function (option) {\n        return _jsx(Picker.Item, {\n          label: option,\n          value: option\n        });\n      })\n    }), _jsxs(Text, {\n      style: styles.price,\n      children: [\"from $\", product.price, product.oldPrice && _jsxs(Text, {\n        style: styles.oldPrice,\n        children: [\" $\", product.oldPrice]\n      })]\n    }), _jsx(Text, {\n      style: styles.description,\n      children: product.description\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  title: {},\n  price: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  oldPrice: {\n    fontSize: 12,\n    fontWeight: 'normal',\n    textDecorationLine: 'line-through'\n  },\n  description: {\n    marginVertical: 10,\n    lineHeight: 20\n  }\n});\nexport default ProductScreen;\n\nfunction setslectedOption(itemValue) {\n  throw new Error('Function not implemented.');\n}","map":{"version":3,"names":["React","useState","product","Picker","ProductScreen","options","selectedOption","setslectedOption","quantity","setQuantity","console","log","images","styles","title","itemValue","map","option","price","oldPrice","description","StyleSheet","create","root","padding","backgroundColor","fontSize","fontWeight","textDecorationLine","marginVertical","lineHeight","Error"],"sources":["C:/Vue Practice/RP/reactNative_projects/CloneApp/CloneApp/src/screens/ProductScreen/index.tsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport { View, Text, StyleSheet } from 'react-native'\r\nimport product from '../../data/product'\r\nimport QuantitySelector from '../../components/QuantitySelector';\r\nimport {Picker} from '@react-native-picker/picker';\r\nimport Button from '../../components/Button';\r\nimport ImageCarousel from '../../components/ImageCarousel';\r\n\r\nconst ProductScreen = () => {\r\n\r\n  const [selectedOption, setslectedOption] = useState(product.options ? product.options[0]: null);\r\n     const [quantity, setQuantity] = useState(1);\r\n     console.log(selectedOption);\r\n     console.log(product.images);\r\n\r\n  return(\r\n    <View>\r\n      <Text style={styles.title} >{product.title}</Text>\r\n      \r\n      <Picker\r\n        selectedValue={setslectedOption}\r\n        onValueChange={(itemValue) =>\r\n         setslectedOption(itemValue)\r\n       }\r\n        >\r\n         {product.options.map(option => (\r\n           <Picker.Item label={option} value={option} />\r\n           ))}\r\n      </Picker>\r\n      \r\n      <Text style={styles.price}>\r\n          from ${product.price}\r\n          {product.oldPrice && (\r\n            <Text style={styles.oldPrice}> ${product.oldPrice}</Text>\r\n          )}\r\n        </Text>\r\n\r\n        <Text style={styles.description}>{product.description}</Text>\r\n\r\n    </View>\r\n  )\r\n}\r\n\r\n// const ProductScreen = () => {\r\n//   const [selectedOption, setslectedOption] = useState(product.options ? product.options[0]: null);\r\n//   const [quantity, setQuantity] = useState(1);\r\n//   console.log(selectedOption);\r\n//   console.log(product.images);\r\n\r\n//   return(\r\n//     <View style={styles.root}>\r\n//       <Text style={styles.title}>{product.title}</Text>\r\n//        <ImageCarousel images={product.images}/>\r\n\r\n//        <Picker\r\n//        selectedValue={selectedOption}\r\n//        onValueChange={(itemValue) =>\r\n//         setslectedOption(itemValue)\r\n//       }\r\n//        >\r\n//         {product.options.map(option => (\r\n//           <Picker.Item label={option} value={option} />\r\n//           ))}\r\n            \r\n//        </Picker>\r\n\r\n//        <Text style={styles.price}>\r\n//          from ${product.price}\r\n//          {product.oldPrice && (\r\n//            <Text style={styles.oldPrice}> ${product.oldPrice}</Text>\r\n//          )}\r\n//        </Text>\r\n//        <Text style={styles.description}>{product.description}</Text>\r\n       \r\n//        <QuantitySelector quantity={quantity} setQuantity={setQuantity}/>\r\n   \r\n//       <Button text={'Add To Cart'} onPress={() => {\r\n//         console.warn('Add to cart');\r\n//        }}\r\n//         containerStyles={{ backgroundColor: 'e3c9005' }}\r\n//       />\r\n       \r\n//        <Button text={'Buy Now'} onPress={() =>  {console.warn('Buy now')}} />\r\n//     </View>\r\n//   )\r\n// }\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n   padding: 10,\r\n   backgroundColor: 'white',\r\n\r\n  },\r\n\r\n  title: {\r\n\r\n  },\r\n\r\n  price:{\r\n   fontSize: 18,\r\n   fontWeight: 'bold',\r\n  },\r\n\r\n  oldPrice:{\r\n    fontSize: 12,\r\n    fontWeight: 'normal',\r\n    textDecorationLine: 'line-through',\r\n  },\r\n  description:{\r\n    marginVertical: 10,\r\n    lineHeight: 20,\r\n    \r\n  }\r\n});\r\nexport default ProductScreen;\r\n\r\nfunction setslectedOption(itemValue: any): void {\r\n  throw new Error('Function not implemented.');\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAEA,OAAOC,OAAP;AAEA,SAAQC,MAAR,QAAqB,6BAArB;;;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EAE1B,gBAA2CH,QAAQ,CAACC,OAAO,CAACG,OAAR,GAAkBH,OAAO,CAACG,OAAR,CAAgB,CAAhB,CAAlB,GAAsC,IAAvC,CAAnD;EAAA;EAAA,IAAOC,cAAP;EAAA,IAAuBC,gBAAvB;;EACG,iBAAgCN,QAAQ,CAAC,CAAD,CAAxC;EAAA;EAAA,IAAOO,QAAP;EAAA,IAAiBC,WAAjB;;EACAC,OAAO,CAACC,GAAR,CAAYL,cAAZ;EACAI,OAAO,CAACC,GAAR,CAAYT,OAAO,CAACU,MAApB;EAEH,OACE,MAAC,IAAD;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAEC,MAAM,CAACC,KAApB;MAAA,UAA6BZ,OAAO,CAACY;IAArC,EADF,EAGE,KAAC,MAAD;MACE,aAAa,EAAEP,gBADjB;MAEE,aAAa,EAAE,uBAACQ,SAAD;QAAA,OACdR,gBAAgB,CAACQ,SAAD,CADF;MAAA,CAFjB;MAAA,UAMIb,OAAO,CAACG,OAAR,CAAgBW,GAAhB,CAAoB,UAAAC,MAAM;QAAA,OACzB,KAAC,MAAD,CAAQ,IAAR;UAAa,KAAK,EAAEA,MAApB;UAA4B,KAAK,EAAEA;QAAnC,EADyB;MAAA,CAA1B;IANJ,EAHF,EAcE,MAAC,IAAD;MAAM,KAAK,EAAEJ,MAAM,CAACK,KAApB;MAAA,qBACWhB,OAAO,CAACgB,KADnB,EAEKhB,OAAO,CAACiB,QAAR,IACC,MAAC,IAAD;QAAM,KAAK,EAAEN,MAAM,CAACM,QAApB;QAAA,iBAAiCjB,OAAO,CAACiB,QAAzC;MAAA,EAHN;IAAA,EAdF,EAqBI,KAAC,IAAD;MAAM,KAAK,EAAEN,MAAM,CAACO,WAApB;MAAA,UAAkClB,OAAO,CAACkB;IAA1C,EArBJ;EAAA,EADF;AA0BD,CAjCD;;AAiFA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;EAC/BC,IAAI,EAAE;IACLC,OAAO,EAAE,EADJ;IAELC,eAAe,EAAE;EAFZ,CADyB;EAO/BX,KAAK,EAAE,EAPwB;EAW/BI,KAAK,EAAC;IACLQ,QAAQ,EAAE,EADL;IAELC,UAAU,EAAE;EAFP,CAXyB;EAgB/BR,QAAQ,EAAC;IACPO,QAAQ,EAAE,EADH;IAEPC,UAAU,EAAE,QAFL;IAGPC,kBAAkB,EAAE;EAHb,CAhBsB;EAqB/BR,WAAW,EAAC;IACVS,cAAc,EAAE,EADN;IAEVC,UAAU,EAAE;EAFF;AArBmB,CAAlB,CAAf;AA2BA,eAAe1B,aAAf;;AAEA,SAASG,gBAAT,CAA0BQ,SAA1B,EAAgD;EAC9C,MAAM,IAAIgB,KAAJ,CAAU,2BAAV,CAAN;AACD"},"metadata":{},"sourceType":"module"}