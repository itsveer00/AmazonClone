{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Open up App.js to start working on your app!\"\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","App","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Vue Practice/RP/reactNative_projects/CloneApp/CloneApp/App.tsx"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.js to start working on your app!</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n\n//  import 'react-native-gesture-handler';\n//  import React from 'react';\n//  import {View, StatusBar, useColorScheme} from 'react-native';\n//  import {StripeProvider} from '@stripe/stripe-react-native';\n \n//  import {Colors} from 'react-native/Libraries/NewAppScreen';\n//  import Router from './src/router';\n \n//  import Amplify, {Auth} from 'aws-amplify';\n//  import {withAuthenticator} from 'aws-amplify-react-native';\n \n//  import config from './src/aws-exports';\n//  Amplify.configure(config);\n \n//  const App = () => {\n//    const isDarkMode = useColorScheme() === 'dark';\n \n//    const backgroundStyle = {\n//      backgroundColor: isDarkMode ? Colors.darker : Colors.lighter,\n//      flex: 1,\n//    };\n//    return (\n//      <View style={backgroundStyle}>\n//        <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />\n//        <StripeProvider publishableKey=\"pk_test_51IqIfWA2WcfjP4nohlwR7PdK6SEeIt5eenVLWcrduRWk5IlG9WSid3GFZiItmJS4de56nrynA3hblwhrW7FVGED500vznukyss\">\n//          <Router />\n//        </StripeProvider>\n//      </View>\n//    );\n//  };\n \n//  export default withAuthenticator(App);"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;;;AAGA,eAAe,SAASC,GAAT,GAAe;EAC5B,OACE,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,IAAD;MAAA;IAAA,EADF,EAEE,KAAC,SAAD;MAAW,KAAK,EAAC;IAAjB,EAFF;EAAA,EADF;AAMD;AAED,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}