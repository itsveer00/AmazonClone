{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from 'react';\nimport Checkbox from 'expo-checkbox';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar index = function index() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      agree = _useState2[0],\n      setAgree = _useState2[1];\n\n  return _jsxs(View, {\n    style: styles.mainContainer,\n    children: [_jsx(Text, {\n      style: styles.mainHeader,\n      children: \"Login form\"\n    }), _jsx(Text, {\n      style: styles.description,\n      children: \"You can reach to us\"\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Text, {\n        style: styles.labels,\n        children: \"Enter your name\"\n      }), _jsx(TextInput, {\n        style: styles.inputStyle,\n        autoCapitalize: \"none\",\n        autoCorrect: false\n      })]\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Text, {\n        style: styles.labels,\n        children: \"Enter your Password\"\n      }), _jsx(TextInput, {\n        style: styles.inputStyle,\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        secureTextEntry: true\n      })]\n    }), _jsxs(View, {\n      style: styles.wrapper,\n      children: [_jsx(Checkbox, {}), _jsx(Text, {\n        style: styles.wrapperText,\n        children: \"I have read and agree with TC\"\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttonStyle,\n      children: _jsx(Text, {\n        children: \"Login\"\n      })\n    })]\n  });\n};\n\nexport default index;\nvar styles = StyleSheet.create({\n  mainContainer: {\n    height: \"100%\",\n    paddingHorizontal: 30,\n    paddingTop: 30,\n    backgroundColor: '#fff'\n  },\n  mainHeader: {\n    fontSize: 25,\n    color: '#344055',\n    fontWeight: '500',\n    paddingTop: 20,\n    textTransform: 'capitalize',\n    fontFamily: 'bold'\n  },\n  description: {\n    fontSize: 20,\n    color: '#7d7d7d',\n    marginBottom: 20,\n    lineHeight: 25,\n    fontFamily: \"regular\"\n  },\n  inputContainer: {\n    margin: 20\n  },\n  labels: {\n    fontSize: 18,\n    color: '#7d7d7d',\n    marginTop: 10,\n    marginBottom: 5,\n    lineHeight: 25,\n    fontFamily: \"regular\"\n  },\n  inputStyle: {\n    borderWidth: 1,\n    borderColor: 'rgba(0,0,0,0,0.3)',\n    paddingHorizontal: 15,\n    paddingVertical: 7,\n    borderRadius: 1,\n    fontFamily: 'regular',\n    fontSize: 18\n  },\n  wrapper: {},\n  wrapperText: {},\n  buttonStyle: {}\n});","map":{"version":3,"names":["React","useState","Checkbox","index","agree","setAgree","styles","mainContainer","mainHeader","description","inputContainer","labels","inputStyle","wrapper","wrapperText","buttonStyle","StyleSheet","create","height","paddingHorizontal","paddingTop","backgroundColor","fontSize","color","fontWeight","textTransform","fontFamily","marginBottom","lineHeight","margin","marginTop","borderWidth","borderColor","paddingVertical","borderRadius"],"sources":["C:/Vue Practice/RP/reactNative_projects/CloneApp/CloneApp/src/screens/LoginScreen/index.tsx"],"sourcesContent":["import { StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\nimport React, { useState } from 'react'\r\nimport Checkbox from 'expo-checkbox'\r\n\r\nconst index = () => {\r\n    const [agree, setAgree] = useState(false);\r\n    return (\r\n        // <View>\r\n        //     <Text>Hello</Text>\r\n        //     <TextInput style={{backgroundColor:'red'}}\r\n        //         // label=\"Email\"\r\n        //         // returnKeyType=\"next\"\r\n        //         // value={email.value}\r\n        //         // onChangeText={text => setEmail({ value: text, error: '' })}\r\n        //         // error={!!email.error}\r\n        //         // errorText={email.error}\r\n        //         // autoCapitalize=\"none\"\r\n        //         // autoCompleteType=\"email\"\r\n        //         // textContentType=\"emailAddress\"\r\n        //         // keyboardType=\"email-address\"\r\n        //     />\r\n\r\n        //     <TextInput style={{backgroundColor:'red'}}\r\n        //         // label=\"Password\"\r\n        //         // returnKeyType=\"done\"\r\n        //         // value={password.value}\r\n        //         // onChangeText={text => setPassword({ value: text, error: '' })}\r\n        //         // error={!!password.error}\r\n        //         // errorText={password.error}\r\n        //         // secureTextEntry\r\n        //     />\r\n        // </View>\r\n        <View style={styles.mainContainer}>\r\n          <Text style={styles.mainHeader}>Login form</Text>\r\n          <Text style={styles.description}>You can reach to us</Text>\r\n          <View style={styles.inputContainer}>\r\n            <Text style={styles.labels}>Enter your name</Text>\r\n            <TextInput style={styles.inputStyle} autoCapitalize='none' autoCorrect={false} />\r\n          </View>\r\n          <View style={styles.inputContainer}>\r\n            <Text style={styles.labels}>Enter your Password</Text>\r\n            <TextInput style={styles.inputStyle} autoCapitalize='none' autoCorrect={false} secureTextEntry={true} />\r\n          </View>\r\n          <View style={styles.wrapper}>\r\n            <Checkbox \r\n            />\r\n            <Text style={styles.wrapperText}>I have read and agree with TC</Text>\r\n          </View>\r\n          <TouchableOpacity style={styles.buttonStyle}>\r\n            <Text>Login</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default index\r\n\r\nconst styles = StyleSheet.create({\r\n    mainContainer: {\r\n        height: \"100%\",\r\n        paddingHorizontal: 30,\r\n        paddingTop: 30,\r\n        backgroundColor: '#fff',\r\n    },\r\n    mainHeader:{\r\n        fontSize: 25,\r\n        color: '#344055',\r\n        fontWeight: '500',\r\n        paddingTop:20,\r\n        textTransform: 'capitalize',\r\n        fontFamily: 'bold',\r\n\r\n    },\r\n    description:{\r\n        fontSize: 20,\r\n        color: '#7d7d7d',\r\n        marginBottom: 20,\r\n        lineHeight: 25,\r\n        fontFamily: \"regular\",\r\n    },\r\n    inputContainer:{\r\n        margin: 20,\r\n    },\r\n    labels: {\r\n        fontSize: 18,\r\n        color: '#7d7d7d',\r\n        marginTop: 10,\r\n        marginBottom: 5,\r\n        lineHeight: 25,\r\n        fontFamily: \"regular\",\r\n    },\r\n    inputStyle:{\r\n        borderWidth: 1,\r\n        borderColor: 'rgba(0,0,0,0,0.3)',\r\n        paddingHorizontal: 15,\r\n        paddingVertical: 7,\r\n        borderRadius: 1,\r\n        fontFamily: 'regular',\r\n        fontSize: 18,\r\n    },\r\n    wrapper:{\r\n\r\n    },\r\n    wrapperText:{\r\n\r\n    },\r\n    buttonStyle:{\r\n\r\n    },\r\n})\r\n\r\n// import React, { memo, useState } from 'react';\r\n// import { TouchableOpacity, StyleSheet, Text, View } from 'react-native';\r\n// import Background from '../components/Background';\r\n// import Logo from '../components/Logo';\r\n// import Header from '../components/Header';\r\n// import Button from '../components/Button';\r\n// import TextInput from '../components/TextInput';\r\n// import BackButton from '../components/BackButton';\r\n// import { theme } from '../core/theme';\r\n// import { emailValidator, passwordValidator } from '../core/utils';\r\n// import { Navigation } from '../types';\r\n\r\n// type Props = {\r\n//   navigation: Navigation;\r\n// };\r\n\r\n// const LoginScreen = ({ navigation }: Props) => {\r\n//   const [email, setEmail] = useState({ value: '', error: '' });\r\n//   const [password, setPassword] = useState({ value: '', error: '' });\r\n\r\n//   const _onLoginPressed = () => {\r\n//     const emailError = emailValidator(email.value);\r\n//     const passwordError = passwordValidator(password.value);\r\n\r\n//     if (emailError || passwordError) {\r\n//       setEmail({ ...email, error: emailError });\r\n//       setPassword({ ...password, error: passwordError });\r\n//       return;\r\n//     }\r\n\r\n//     navigation.navigate('Dashboard');\r\n//   };\r\n\r\n//   return (\r\n//     <Background>\r\n//       <BackButton goBack={() => navigation.navigate('HomeScreen')} />\r\n\r\n//       <Logo />\r\n\r\n//       <Header>Welcome back.</Header>\r\n\r\n//       <TextInput\r\n//         label=\"Email\"\r\n//         returnKeyType=\"next\"\r\n//         value={email.value}\r\n//         onChangeText={text => setEmail({ value: text, error: '' })}\r\n//         error={!!email.error}\r\n//         errorText={email.error}\r\n//         autoCapitalize=\"none\"\r\n//         autoCompleteType=\"email\"\r\n//         textContentType=\"emailAddress\"\r\n//         keyboardType=\"email-address\"\r\n//       />\r\n\r\n//       <TextInput\r\n//         label=\"Password\"\r\n//         returnKeyType=\"done\"\r\n//         value={password.value}\r\n//         onChangeText={text => setPassword({ value: text, error: '' })}\r\n//         error={!!password.error}\r\n//         errorText={password.error}\r\n//         secureTextEntry\r\n//       />\r\n\r\n//       <View style={styles.forgotPassword}>\r\n//         <TouchableOpacity\r\n//           onPress={() => navigation.navigate('ForgotPasswordScreen')}\r\n//         >\r\n//           <Text style={styles.label}>Forgot your password?</Text>\r\n//         </TouchableOpacity>\r\n//       </View>\r\n\r\n//       <Button mode=\"contained\" onPress={_onLoginPressed}>\r\n//         Login\r\n//       </Button>\r\n\r\n//       <View style={styles.row}>\r\n//         <Text style={styles.label}>Don’t have an account? </Text>\r\n//         <TouchableOpacity onPress={() => navigation.navigate('RegisterScreen')}>\r\n//           <Text style={styles.link}>Sign up</Text>\r\n//         </TouchableOpacity>\r\n//       </View>\r\n//     </Background>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   forgotPassword: {\r\n//     width: '100%',\r\n//     alignItems: 'flex-end',\r\n//     marginBottom: 24,\r\n//   },\r\n//   row: {\r\n//     flexDirection: 'row',\r\n//     marginTop: 4,\r\n//   },\r\n//   label: {\r\n//     color: theme.colors.secondary,\r\n//   },\r\n//   link: {\r\n//     fontWeight: 'bold',\r\n//     color: theme.colors.primary,\r\n//   },\r\n// });\r\n\r\n// export default memo(LoginScreen);"],"mappings":"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"},"metadata":{},"sourceType":"module"}