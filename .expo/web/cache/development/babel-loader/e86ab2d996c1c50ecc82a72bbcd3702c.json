{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from 'react';\nimport Checkbox from 'expo-checkbox';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar index = function index() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      agree = _useState2[0],\n      setAgree = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userName = _useState4[0],\n      setUserName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  console.warn(userName, password);\n\n  var submit = function submit() {\n    if (userName === 'veer' && password === '123') {\n      console.warn('Logged in');\n    } else if (userName === '' || password === '') {\n      console.warn('Please input id and password');\n    } else {\n      console.warn('incorrect id or password');\n    }\n\n    return Alert.alert(userName, password);\n  };\n\n  return _jsxs(View, {\n    style: styles.mainContainer,\n    children: [_jsx(Text, {\n      style: styles.mainHeader,\n      children: \"Login Page\"\n    }), _jsx(Text, {\n      style: styles.description,\n      children: \"Sign in\"\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Text, {\n        style: styles.labels,\n        children: \"Enter your E-Mail\"\n      }), _jsx(TextInput, {\n        style: styles.inputStyle,\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        placeholder: \"Email or Phone\",\n        placeholderTextColor: \"grey\",\n        value: userName,\n        onChangeText: function onChangeText(acctualData) {\n          return setUserName(acctualData);\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Text, {\n        style: styles.labels,\n        children: \"Enter your Password\"\n      }), _jsx(TextInput, {\n        style: styles.inputStyle,\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        placeholder: \"Password\",\n        placeholderTextColor: \"grey\",\n        secureTextEntry: true,\n        value: password,\n        onChangeText: function onChangeText(acctualData) {\n          return setPassword(acctualData);\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.wrapper,\n      children: [_jsx(Checkbox, {\n        style: [styles.wrapperBox, {\n          backgroundColor: agree ? '#4630EB' : 'grey'\n        }],\n        value: agree,\n        onValueChange: function onValueChange() {\n          return setAgree(!agree);\n        },\n        color: agree ? '#4630EB' : undefined\n      }), _jsx(Text, {\n        style: styles.wrapperText,\n        children: \"I have read and agree with TC\"\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: [styles.buttonStyle, {\n        backgroundColor: agree ? '#e47911' : '#ffbd7d'\n      }],\n      disabled: !agree,\n      onPress: function onPress() {\n        return submit();\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Login\"\n      })\n    }), _jsxs(View, {\n      style: styles.signupContainer,\n      children: [_jsx(Text, {\n        style: styles.signupContainerLabel,\n        children: \"New user\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.signupButtonStyle,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Signup here\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default index;\nvar styles = StyleSheet.create({\n  mainContainer: {\n    height: \"100%\",\n    paddingHorizontal: 30,\n    paddingTop: 30,\n    backgroundColor: '#F5F5F5'\n  },\n  mainHeader: {\n    fontSize: 25,\n    color: '#344055',\n    fontWeight: '500',\n    paddingTop: 20,\n    textTransform: 'capitalize',\n    fontFamily: 'bold'\n  },\n  description: {\n    fontSize: 40,\n    color: '#344055',\n    fontWeight: '500',\n    marginBottom: 20,\n    lineHeight: 25,\n    fontFamily: \"bold\",\n    textAlign: 'center',\n    marginTop: 100\n  },\n  inputContainer: {\n    margin: 20\n  },\n  labels: {\n    fontSize: 18,\n    marginTop: 10,\n    marginBottom: 5,\n    lineHeight: 25,\n    fontFamily: \"regular\"\n  },\n  inputStyle: {\n    borderWidth: 1,\n    borderColor: 'rgba(0,0,0,0,0.3)',\n    paddingHorizontal: 15,\n    paddingVertical: 7,\n    borderRadius: 5,\n    fontFamily: 'regular',\n    fontSize: 18,\n    backgroundColor: 'white',\n    borderTopColor: 'transparent',\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent'\n  },\n  wrapper: {\n    flexDirection: 'row',\n    marginLeft: 20\n  },\n  wrapperBox: {\n    marginVertical: 'auto'\n  },\n  wrapperText: {\n    fontSize: 18,\n    color: '#7d7d7d',\n    marginLeft: 15\n  },\n  buttonStyle: {\n    marginTop: 50,\n    width: 120,\n    height: 50,\n    borderRadius: 10,\n    marginHorizontal: 'auto'\n  },\n  buttonText: {\n    fontSize: 20,\n    marginHorizontal: 'auto',\n    marginVertical: 'auto'\n  },\n  signupContainer: {\n    margin: 20\n  },\n  signupContainerLabel: {\n    textAlign: 'center',\n    fontSize: 20,\n    color: '#7d7d7d',\n    marginLeft: 15\n  },\n  signupButtonStyle: {\n    marginTop: 30,\n    width: 200,\n    height: 50,\n    borderRadius: 10,\n    marginHorizontal: 'auto'\n  }\n});","map":{"version":3,"names":["React","useState","Checkbox","index","agree","setAgree","userName","setUserName","password","setPassword","console","warn","submit","Alert","alert","styles","mainContainer","mainHeader","description","inputContainer","labels","inputStyle","acctualData","wrapper","wrapperBox","backgroundColor","undefined","wrapperText","buttonStyle","buttonText","signupContainer","signupContainerLabel","signupButtonStyle","StyleSheet","create","height","paddingHorizontal","paddingTop","fontSize","color","fontWeight","textTransform","fontFamily","marginBottom","lineHeight","textAlign","marginTop","margin","borderWidth","borderColor","paddingVertical","borderRadius","borderTopColor","borderLeftColor","borderRightColor","flexDirection","marginLeft","marginVertical","width","marginHorizontal"],"sources":["C:/Vue Practice/RP/reactNative_projects/CloneApp/CloneApp/src/screens/LoginScreen/index.tsx"],"sourcesContent":["import { Alert, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\nimport React, { useState } from 'react'\r\nimport Checkbox from 'expo-checkbox'\r\n\r\nconst index = () => {\r\n    const [agree, setAgree] = useState(false);\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    console.warn(userName, password)\r\n    const submit = () => {\r\n        if (userName === 'veer' && password === '123') {\r\n            console.warn('Logged in');\r\n        }\r\n        else if (userName === '' || password === '') {\r\n            console.warn('Please input id and password');\r\n        }\r\n        else {\r\n            console.warn('incorrect id or password');\r\n        }\r\n        return Alert.alert(userName, password);\r\n    }\r\n\r\n    return (\r\n        // <View>\r\n        //     <Text>Hello</Text>\r\n        //     <TextInput style={{backgroundColor:'red'}}\r\n        //         // label=\"Email\"\r\n        //         // returnKeyType=\"next\"\r\n        //         // value={email.value}\r\n        //         // onChangeText={text => setEmail({ value: text, error: '' })}\r\n        //         // error={!!email.error}\r\n        //         // errorText={email.error}\r\n        //         // autoCapitalize=\"none\"\r\n        //         // autoCompleteType=\"email\"\r\n        //         // textContentType=\"emailAddress\"\r\n        //         // keyboardType=\"email-address\"\r\n        //     />\r\n\r\n        //     <TextInput style={{backgroundColor:'red'}}\r\n        //         // label=\"Password\"\r\n        //         // returnKeyType=\"done\"\r\n        //         // value={password.value}\r\n        //         // onChangeText={text => setPassword({ value: text, error: '' })}\r\n        //         // error={!!password.error}\r\n        //         // errorText={password.error}\r\n        //         // secureTextEntry\r\n        //     />\r\n        // </View>\r\n        <View style={styles.mainContainer}>\r\n            <Text style={styles.mainHeader}>Login Page</Text>\r\n            <Text style={styles.description}>Sign in</Text>\r\n            <View style={styles.inputContainer}>\r\n                <Text style={styles.labels}>Enter your E-Mail</Text>\r\n                <TextInput style={styles.inputStyle} autoCapitalize='none'\r\n                    autoCorrect={false} placeholder=\"Email or Phone\" placeholderTextColor='grey' value={userName}\r\n                    onChangeText={(acctualData) => setUserName(acctualData)}\r\n                />\r\n            </View>\r\n            <View style={styles.inputContainer}>\r\n                <Text style={styles.labels}>Enter your Password</Text>\r\n                <TextInput style={styles.inputStyle} autoCapitalize='none'\r\n                    autoCorrect={false} placeholder=\"Password\" placeholderTextColor='grey' secureTextEntry={true}\r\n                    value={password} onChangeText={(acctualData) => setPassword(acctualData)} />\r\n            </View>\r\n            <View style={styles.wrapper}>\r\n                <Checkbox style={[styles.wrapperBox, { backgroundColor: agree ? '#4630EB' : 'grey', }]} value={agree}\r\n                    onValueChange={() => setAgree(!agree)}\r\n                    color={agree ? '#4630EB' : undefined}\r\n                />\r\n                <Text style={styles.wrapperText}>I have read and agree with TC</Text>\r\n            </View>\r\n            <TouchableOpacity\r\n                style={[\r\n                    styles.buttonStyle,\r\n                    {\r\n                        backgroundColor: agree ? '#e47911' : '#ffbd7d',\r\n                    },\r\n                ]}\r\n                disabled={!agree}\r\n                onPress={() => submit()}\r\n            >\r\n                <Text style={styles.buttonText}>Login</Text>\r\n            </TouchableOpacity>\r\n            <View style={styles.signupContainer}>\r\n                \r\n                <Text style={styles.signupContainerLabel} >New user</Text>\r\n                <TouchableOpacity\r\n                style={ styles.signupButtonStyle }>\r\n                <Text style={styles.buttonText}>Signup here</Text>\r\n            </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default index\r\n\r\nconst styles = StyleSheet.create({\r\n    mainContainer: {\r\n        height: \"100%\",\r\n        paddingHorizontal: 30,\r\n        paddingTop: 30,\r\n        backgroundColor: '#F5F5F5',\r\n    },\r\n    mainHeader: {\r\n        fontSize: 25,\r\n        color: '#344055',\r\n        fontWeight: '500',\r\n        paddingTop: 20,\r\n        textTransform: 'capitalize',\r\n        fontFamily: 'bold',\r\n\r\n    },\r\n    description: {\r\n        fontSize: 40,\r\n        color: '#344055',\r\n        fontWeight: '500',\r\n        // color: '#7d7d7d',\r\n        marginBottom: 20,\r\n        lineHeight: 25,\r\n        fontFamily: \"bold\",\r\n        textAlign: 'center',\r\n        marginTop: 100,\r\n    },\r\n    inputContainer: {\r\n        margin: 20,\r\n    },\r\n    labels: {\r\n        fontSize: 18,\r\n        // color: '#7d7d7d',\r\n        marginTop: 10,\r\n        marginBottom: 5,\r\n        lineHeight: 25,\r\n        fontFamily: \"regular\",\r\n    },\r\n    inputStyle: {\r\n        borderWidth: 1,\r\n        borderColor: 'rgba(0,0,0,0,0.3)',\r\n        paddingHorizontal: 15,\r\n        paddingVertical: 7,\r\n        borderRadius: 5,\r\n        fontFamily: 'regular',\r\n        fontSize: 18,\r\n        backgroundColor: 'white',\r\n        borderTopColor: 'transparent',\r\n        borderLeftColor: 'transparent',\r\n        borderRightColor: 'transparent',\r\n\r\n    },\r\n    wrapper: {\r\n        flexDirection: 'row',\r\n        marginLeft: 20,\r\n    },\r\n    wrapperBox: {\r\n        marginVertical: 'auto',\r\n    },\r\n    wrapperText: {\r\n        fontSize: 18,\r\n        color: '#7d7d7d',\r\n        marginLeft: 15,\r\n    },\r\n    buttonStyle: {\r\n        marginTop: 50,\r\n        width: 120,\r\n        height: 50,\r\n        borderRadius: 10,\r\n        marginHorizontal: 'auto',\r\n    },\r\n    buttonText: {\r\n        fontSize: 20,\r\n        marginHorizontal: 'auto',\r\n        marginVertical: 'auto'\r\n    },\r\n    signupContainer:{\r\n       margin: 20,\r\n    //    backgroundColor: 'red'\r\n    },\r\n    signupContainerLabel:{\r\n        textAlign: 'center',\r\n        fontSize: 20,\r\n        color: '#7d7d7d',\r\n        marginLeft: 15,\r\n    },\r\n    signupButtonStyle:{\r\n        marginTop: 30,\r\n        width: 200,\r\n        height: 50,\r\n        borderRadius: 10,\r\n        marginHorizontal: 'auto',\r\n    }\r\n})\r\n\r\n// import React, { memo, useState } from 'react';\r\n// import { TouchableOpacity, StyleSheet, Text, View } from 'react-native';\r\n// import Background from '../components/Background';\r\n// import Logo from '../components/Logo';\r\n// import Header from '../components/Header';\r\n// import Button from '../components/Button';\r\n// import TextInput from '../components/TextInput';\r\n// import BackButton from '../components/BackButton';\r\n// import { theme } from '../core/theme';\r\n// import { emailValidator, passwordValidator } from '../core/utils';\r\n// import { Navigation } from '../types';\r\n\r\n// type Props = {\r\n//   navigation: Navigation;\r\n// };\r\n\r\n// const LoginScreen = ({ navigation }: Props) => {\r\n//   const [email, setEmail] = useState({ value: '', error: '' });\r\n//   const [password, setPassword] = useState({ value: '', error: '' });\r\n\r\n//   const _onLoginPressed = () => {\r\n//     const emailError = emailValidator(email.value);\r\n//     const passwordError = passwordValidator(password.value);\r\n\r\n//     if (emailError || passwordError) {\r\n//       setEmail({ ...email, error: emailError });\r\n//       setPassword({ ...password, error: passwordError });\r\n//       return;\r\n//     }\r\n\r\n//     navigation.navigate('Dashboard');\r\n//   };\r\n\r\n//   return (\r\n//     <Background>\r\n//       <BackButton goBack={() => navigation.navigate('HomeScreen')} />\r\n\r\n//       <Logo />\r\n\r\n//       <Header>Welcome back.</Header>\r\n\r\n//       <TextInput\r\n//         label=\"Email\"\r\n//         returnKeyType=\"next\"\r\n//         value={email.value}\r\n//         onChangeText={text => setEmail({ value: text, error: '' })}\r\n//         error={!!email.error}\r\n//         errorText={email.error}\r\n//         autoCapitalize=\"none\"\r\n//         autoCompleteType=\"email\"\r\n//         textContentType=\"emailAddress\"\r\n//         keyboardType=\"email-address\"\r\n//       />\r\n\r\n//       <TextInput\r\n//         label=\"Password\"\r\n//         returnKeyType=\"done\"\r\n//         value={password.value}\r\n//         onChangeText={text => setPassword({ value: text, error: '' })}\r\n//         error={!!password.error}\r\n//         errorText={password.error}\r\n//         secureTextEntry\r\n//       />\r\n\r\n//       <View style={styles.forgotPassword}>\r\n//         <TouchableOpacity\r\n//           onPress={() => navigation.navigate('ForgotPasswordScreen')}\r\n//         >\r\n//           <Text style={styles.label}>Forgot your password?</Text>\r\n//         </TouchableOpacity>\r\n//       </View>\r\n\r\n//       <Button mode=\"contained\" onPress={_onLoginPressed}>\r\n//         Login\r\n//       </Button>\r\n\r\n//       <View style={styles.row}>\r\n//         <Text style={styles.label}>Don’t have an account? </Text>\r\n//         <TouchableOpacity onPress={() => navigation.navigate('RegisterScreen')}>\r\n//           <Text style={styles.link}>Sign up</Text>\r\n//         </TouchableOpacity>\r\n//       </View>\r\n//     </Background>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   forgotPassword: {\r\n//     width: '100%',\r\n//     alignItems: 'flex-end',\r\n//     marginBottom: 24,\r\n//   },\r\n//   row: {\r\n//     flexDirection: 'row',\r\n//     marginTop: 4,\r\n//   },\r\n//   label: {\r\n//     color: theme.colors.secondary,\r\n//   },\r\n//   link: {\r\n//     fontWeight: 'bold',\r\n//     color: theme.colors.primary,\r\n//   },\r\n// });\r\n\r\n// export default memo(LoginScreen);"],"mappings":"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"},"metadata":{},"sourceType":"module"}