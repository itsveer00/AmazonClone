{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useState } from 'react';\nimport { Picker } from '@react-native-picker/picker';\nimport countryList from 'country-List';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar countries = countryList.getData();\n\nvar AddressScreen = function AddressScreen() {\n  var _useState = useState(countries[0].code),\n      _useState2 = _slicedToArray(_useState, 2),\n      country = _useState2[0],\n      setCountry = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fullname = _useState4[0],\n      setFullname = _useState4[1];\n\n  return _jsxs(View, {\n    style: styles.root,\n    children: [_jsx(View, {\n      style: styles.row,\n      children: _jsx(Picker, {\n        selectedValue: country,\n        onValueChange: setCountry,\n        children: countries.map(function (country) {\n          return _jsx(Picker.Item, {\n            value: country.code,\n            label: country.name\n          });\n        })\n      })\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Full name (First and Last name)\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Full Name\",\n        value: fullname,\n        onChangeText: setFullname\n      })]\n    })]\n  });\n};\n\nexport default AddressScreen;\nvar styles = StyleSheet.create({\n  root: {\n    padding: 10\n  },\n  row: {},\n  label: {\n    fontWeight: 'bold'\n  },\n  input: {\n    backgroundColor: 'white',\n    padding: 5,\n    marginVertical: 5,\n    height: 30,\n    borderWidth: 1,\n    borderColor: 'lightgrey',\n    borderRadius: 2\n  }\n});","map":{"version":3,"names":["React","useState","Picker","countryList","countries","getData","AddressScreen","code","country","setCountry","fullname","setFullname","styles","root","row","map","name","label","input","StyleSheet","create","padding","fontWeight","backgroundColor","marginVertical","height","borderWidth","borderColor","borderRadius"],"sources":["C:/Vue Practice/RP/reactNative_projects/CloneApp/CloneApp/src/screens/AddressScreen/index.tsx"],"sourcesContent":["import { StyleSheet, Text, View, TextInput } from 'react-native';\r\nimport React, { useState } from 'react';\r\nimport {Picker} from '@react-native-picker/picker';\r\nimport countryList from 'country-List';\r\n\r\nconst countries = countryList.getData();\r\n\r\nconst AddressScreen = () => {\r\n    const [country, setCountry] = useState(countries[0].code);\r\n    const [fullname, setFullname] = useState('');\r\n\r\n  return (\r\n    <View style={styles.root}>\r\n      <View style={styles.row}>\r\n         <Picker selectedValue={country} onValueChange={setCountry}>\r\n            {countries.map(country => (\r\n            <Picker.Item value={country.code} label={country.name} />\r\n            ))}\r\n         </Picker>\r\n      </View>\r\n      \r\n      <View style={styles.row}>\r\n        <Text style={styles.label}>Full name (First and Last name)</Text>\r\n        <TextInput\r\n         style={styles.input}\r\n          placeholder='Full Name'\r\n          value={fullname}\r\n          onChangeText={setFullname}/>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default AddressScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    root: {\r\n     padding: 10,\r\n    },\r\n    row: {\r\n\r\n    },\r\n    label: {\r\n     fontWeight: 'bold'\r\n    },\r\n    input: {\r\n     backgroundColor: 'white',\r\n     padding: 5,\r\n     marginVertical: 5,\r\n     height: 30,\r\n     borderWidth: 1,\r\n     borderColor: 'lightgrey',\r\n     borderRadius: 2,\r\n    },\r\n})"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,MAAR,QAAqB,6BAArB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;;AAEA,IAAMC,SAAS,GAAGD,WAAW,CAACE,OAAZ,EAAlB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EACxB,gBAA8BL,QAAQ,CAACG,SAAS,CAAC,CAAD,CAAT,CAAaG,IAAd,CAAtC;EAAA;EAAA,IAAOC,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAAgCR,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOS,QAAP;EAAA,IAAiBC,WAAjB;;EAEF,OACE,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,IAApB;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACE,GAApB;MAAA,UACG,KAAC,MAAD;QAAQ,aAAa,EAAEN,OAAvB;QAAgC,aAAa,EAAEC,UAA/C;QAAA,UACIL,SAAS,CAACW,GAAV,CAAc,UAAAP,OAAO;UAAA,OACtB,KAAC,MAAD,CAAQ,IAAR;YAAa,KAAK,EAAEA,OAAO,CAACD,IAA5B;YAAkC,KAAK,EAAEC,OAAO,CAACQ;UAAjD,EADsB;QAAA,CAArB;MADJ;IADH,EADF,EASE,MAAC,IAAD;MAAM,KAAK,EAAEJ,MAAM,CAACE,GAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAEF,MAAM,CAACK,KAApB;QAAA;MAAA,EADF,EAEE,KAAC,SAAD;QACC,KAAK,EAAEL,MAAM,CAACM,KADf;QAEE,WAAW,EAAC,WAFd;QAGE,KAAK,EAAER,QAHT;QAIE,YAAY,EAAEC;MAJhB,EAFF;IAAA,EATF;EAAA,EADF;AAoBD,CAxBD;;AA0BA,eAAeL,aAAf;AAEA,IAAMM,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAC7BP,IAAI,EAAE;IACLQ,OAAO,EAAE;EADJ,CADuB;EAI7BP,GAAG,EAAE,EAJwB;EAO7BG,KAAK,EAAE;IACNK,UAAU,EAAE;EADN,CAPsB;EAU7BJ,KAAK,EAAE;IACNK,eAAe,EAAE,OADX;IAENF,OAAO,EAAE,CAFH;IAGNG,cAAc,EAAE,CAHV;IAINC,MAAM,EAAE,EAJF;IAKNC,WAAW,EAAE,CALP;IAMNC,WAAW,EAAE,WANP;IAONC,YAAY,EAAE;EAPR;AAVsB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}