{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport React, { useState } from 'react';\nimport { Picker } from '@react-native-picker/picker';\nimport countryList from 'country-List';\nimport Button from \"../../components/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar countries = countryList.getData();\n\nvar AddressScreen = function AddressScreen() {\n  var _useState = useState(countries[0].code),\n      _useState2 = _slicedToArray(_useState, 2),\n      country = _useState2[0],\n      setCountry = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fullname = _useState4[0],\n      setFullname = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      address = _useState8[0],\n      setAddress = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      city = _useState10[0],\n      setCity = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      addressError = _useState12[0],\n      setAddressError = _useState12[1];\n\n  var onCheckout = function onCheckout() {\n    if (!fullname) {\n      Alert.alert('Please Enter full name');\n      return;\n    }\n\n    if (!phone) {\n      Alert.alert('Please Enter phone number');\n      return;\n    }\n\n    console.warn('Success, Checkout');\n  };\n\n  return _jsxs(View, {\n    style: styles.root,\n    children: [_jsx(View, {\n      style: styles.row,\n      children: _jsx(Picker, {\n        selectedValue: country,\n        onValueChange: setCountry,\n        children: countries.map(function (country) {\n          return _jsx(Picker.Item, {\n            value: country.code,\n            label: country.name\n          });\n        })\n      })\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Full name (First and Last name)\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Full Name\",\n        value: fullname,\n        onChangeText: setFullname\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Phone number\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Phone number\",\n        value: phone,\n        onChangeText: setPhone,\n        keyboardType: 'phone-pad'\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Address\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Address\",\n        value: address,\n        onChangeText: setAddress\n      }), addressError && _jsx(Text, {\n        style: styles.errorLabel,\n        children: addressError\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"City\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"City\",\n        value: city,\n        onChangeText: setCity\n      })]\n    }), _jsx(Button, {\n      text: \"Checkout\",\n      onPress: onCheckout\n    })]\n  });\n};\n\nexport default AddressScreen;\nvar styles = StyleSheet.create({\n  root: {\n    padding: 10\n  },\n  row: {\n    marginVertical: 5\n  },\n  label: {\n    fontWeight: 'bold'\n  },\n  input: {\n    backgroundColor: 'white',\n    padding: 5,\n    marginVertical: 5,\n    height: 30,\n    borderWidth: 1,\n    borderColor: 'lightgrey',\n    borderRadius: 2\n  },\n  errorLabel: {\n    color: 'red'\n  }\n});","map":{"version":3,"names":["React","useState","Picker","countryList","Button","countries","getData","AddressScreen","code","country","setCountry","fullname","setFullname","phone","setPhone","address","setAddress","city","setCity","addressError","setAddressError","onCheckout","Alert","alert","console","warn","styles","root","row","map","name","label","input","errorLabel","StyleSheet","create","padding","marginVertical","fontWeight","backgroundColor","height","borderWidth","borderColor","borderRadius","color"],"sources":["C:/Vue Practice/RP/reactNative_projects/CloneApp/CloneApp/src/screens/AddressScreen/index.tsx"],"sourcesContent":["import { StyleSheet, Text, View, TextInput, Alert } from 'react-native';\r\nimport React, { useState } from 'react';\r\nimport {Picker} from '@react-native-picker/picker';\r\nimport countryList from 'country-List';\r\nimport Button from '../../components/Button';\r\n\r\nconst countries = countryList.getData();\r\n\r\nconst AddressScreen = () => {\r\n    const [country, setCountry] = useState(countries[0].code);\r\n    const [fullname, setFullname] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [addressError, setAddressError] = useState('');\r\n\r\n    const onCheckout = () => {\r\n        if(!fullname){\r\n            Alert.alert('Please Enter full name')\r\n            return;  \r\n        }\r\n\r\n        if(!phone) {\r\n            Alert.alert('Please Enter phone number')\r\n            return;  \r\n        }\r\n        console.warn('Success, Checkout');\r\n    }\r\n\r\n  return (\r\n    <View style={styles.root}>\r\n      <View style={styles.row}>\r\n         <Picker selectedValue={country} onValueChange={setCountry}>\r\n            {countries.map(country => (\r\n            <Picker.Item value={country.code} label={country.name} />\r\n            ))}\r\n         </Picker>\r\n      </View>\r\n\r\n      <View style={styles.row}>\r\n        <Text style={styles.label}>Full name (First and Last name)</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder='Full Name'\r\n          value={fullname}\r\n          onChangeText={setFullname} />\r\n      </View>\r\n\r\n      <View style={styles.row}>\r\n        <Text style={styles.label}>Phone number</Text>\r\n        <TextInput\r\n         style={styles.input}\r\n          placeholder='Phone number'\r\n          value={phone}\r\n          onChangeText={setPhone}\r\n          keyboardType={'phone-pad'}\r\n          />\r\n      </View>\r\n\r\n      <View style={styles.row}>\r\n        <Text style={styles.label}>Address</Text>\r\n        <TextInput\r\n         style={styles.input}\r\n          placeholder='Address'\r\n          value={address}\r\n          onChangeText={setAddress}\r\n          />\r\n          {addressError && <Text style={styles.errorLabel}>{addressError}</Text> }\r\n      </View>\r\n\r\n      <View style={styles.row}>\r\n        <Text style={styles.label}>City</Text>\r\n        <TextInput\r\n         style={styles.input}\r\n          placeholder='City'\r\n          value={city}\r\n          onChangeText={setCity}\r\n          />\r\n      </View>\r\n      <Button text='Checkout' onPress={onCheckout} />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default AddressScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    root: {\r\n     padding: 10,\r\n    },\r\n    row: {\r\n      marginVertical: 5,\r\n    },\r\n    label: {\r\n     fontWeight: 'bold'\r\n    },\r\n    input: {\r\n     backgroundColor: 'white',\r\n     padding: 5,\r\n     marginVertical: 5,\r\n     height: 30,\r\n     borderWidth: 1,\r\n     borderColor: 'lightgrey',\r\n     borderRadius: 2,\r\n    },\r\n    errorLabel: {\r\n      color: 'red',\r\n    },\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}