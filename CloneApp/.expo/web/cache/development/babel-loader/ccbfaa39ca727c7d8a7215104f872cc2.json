{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles, { shadowStyle, container, searchboxContainer } from \"../HeaderClassicSearchBar/HeaderClassicSearchBar.style\";\nimport Androw from \"react-native-androw\";\nimport SearchBox from \"../components/SearchBox/SearchBox\";\nimport Icon from \"react-native-dynamic-vector-icons\";\nimport Ripple from \"react-native-material-ripple\";\nimport { useSafeArea } from \"react-native-safe-area-context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HeaderClassicSearchBar = function HeaderClassicSearchBar(props) {\n  var shadowColor = props.shadowColor,\n      backgroundColor = props.backgroundColor,\n      onPress = props.onPress;\n  var insets = useSafeArea();\n  return _jsx(Androw, {\n    style: shadowStyle(shadowColor),\n    children: _jsx(View, {\n      style: container(backgroundColor, insets),\n      children: _jsxs(View, {\n        style: searchboxContainer(insets),\n        children: [_jsx(SearchBox, _objectSpread({\n          searchBoxWidth: \"80%\"\n        }, props)), _jsx(Ripple, _objectSpread(_objectSpread({\n          rippleColor: \"gray\",\n          style: styles.rippleContainer,\n          rippleContainerBorderRadius: 100,\n          onPress: onPress\n        }, props), {}, {\n          children: _jsx(Icon, _objectSpread({\n            name: \"filter\",\n            type: \"FontAwesome\"\n          }, props))\n        }))]\n      })\n    })\n  });\n};\n\nHeaderClassicSearchBar.propTypes = {\n  shadowColor: PropTypes.string,\n  backgroundColor: PropTypes.string\n};\nHeaderClassicSearchBar.defaultProps = {\n  shadowColor: \"#000\",\n  backgroundColor: \"#fff\"\n};\nexport default HeaderClassicSearchBar;","map":{"version":3,"names":["React","PropTypes","styles","shadowStyle","container","searchboxContainer","Androw","SearchBox","Icon","Ripple","useSafeArea","HeaderClassicSearchBar","props","shadowColor","backgroundColor","onPress","insets","rippleContainer","propTypes","string","defaultProps"],"sources":["C:/Vue Practice/RP/reactNative_projects/CloneApp/CloneApp/node_modules/react-native-header-search-bar/lib/src/HeaderClassicSearchBar/HeaderClassicSearchBar.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View } from \"react-native\";\nimport styles, {\n  shadowStyle,\n  container,\n  searchboxContainer\n} from \"../HeaderClassicSearchBar/HeaderClassicSearchBar.style\";\nimport Androw from \"react-native-androw\";\nimport SearchBox from \"../components/SearchBox/SearchBox\";\nimport Icon from \"react-native-dynamic-vector-icons\";\nimport Ripple from \"react-native-material-ripple\";\nimport { useSafeArea } from \"react-native-safe-area-context\";\n\nconst HeaderClassicSearchBar = props => {\n  const { shadowColor, backgroundColor, onPress } = props;\n  const insets = useSafeArea();\n  return (\n    <Androw style={shadowStyle(shadowColor)}>\n      <View style={container(backgroundColor, insets)}>\n        <View style={searchboxContainer(insets)}>\n          <SearchBox searchBoxWidth=\"80%\" {...props} />\n          <Ripple\n            rippleColor=\"gray\"\n            style={styles.rippleContainer}\n            rippleContainerBorderRadius={100}\n            onPress={onPress}\n            {...props}\n          >\n            <Icon name=\"filter\" type=\"FontAwesome\" {...props} />\n          </Ripple>\n        </View>\n      </View>\n    </Androw>\n  );\n};\n\nHeaderClassicSearchBar.propTypes = {\n  shadowColor: PropTypes.string,\n  backgroundColor: PropTypes.string\n};\n\nHeaderClassicSearchBar.defaultProps = {\n  shadowColor: \"#000\",\n  backgroundColor: \"#fff\"\n};\n\nexport default HeaderClassicSearchBar;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAOC,MAAP,IACEC,WADF,EAEEC,SAFF,EAGEC,kBAHF;AAKA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP;AACA,OAAOC,IAAP,MAAiB,mCAAjB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,SAASC,WAAT,QAA4B,gCAA5B;;;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,KAAK,EAAI;EACtC,IAAQC,WAAR,GAAkDD,KAAlD,CAAQC,WAAR;EAAA,IAAqBC,eAArB,GAAkDF,KAAlD,CAAqBE,eAArB;EAAA,IAAsCC,OAAtC,GAAkDH,KAAlD,CAAsCG,OAAtC;EACA,IAAMC,MAAM,GAAGN,WAAW,EAA1B;EACA,OACE,KAAC,MAAD;IAAQ,KAAK,EAAEP,WAAW,CAACU,WAAD,CAA1B;IAAA,UACE,KAAC,IAAD;MAAM,KAAK,EAAET,SAAS,CAACU,eAAD,EAAkBE,MAAlB,CAAtB;MAAA,UACE,MAAC,IAAD;QAAM,KAAK,EAAEX,kBAAkB,CAACW,MAAD,CAA/B;QAAA,WACE,KAAC,SAAD;UAAW,cAAc,EAAC;QAA1B,GAAoCJ,KAApC,EADF,EAEE,KAAC,MAAD;UACE,WAAW,EAAC,MADd;UAEE,KAAK,EAAEV,MAAM,CAACe,eAFhB;UAGE,2BAA2B,EAAE,GAH/B;UAIE,OAAO,EAAEF;QAJX,GAKMH,KALN;UAAA,UAOE,KAAC,IAAD;YAAM,IAAI,EAAC,QAAX;YAAoB,IAAI,EAAC;UAAzB,GAA2CA,KAA3C;QAPF,GAFF;MAAA;IADF;EADF,EADF;AAkBD,CArBD;;AAuBAD,sBAAsB,CAACO,SAAvB,GAAmC;EACjCL,WAAW,EAAEZ,SAAS,CAACkB,MADU;EAEjCL,eAAe,EAAEb,SAAS,CAACkB;AAFM,CAAnC;AAKAR,sBAAsB,CAACS,YAAvB,GAAsC;EACpCP,WAAW,EAAE,MADuB;EAEpCC,eAAe,EAAE;AAFmB,CAAtC;AAKA,eAAeH,sBAAf"},"metadata":{},"sourceType":"module"}