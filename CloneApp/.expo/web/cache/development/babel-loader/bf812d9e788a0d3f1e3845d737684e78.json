{"ast":null,"code":"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Icon from \"react-native-dynamic-vector-icons\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles, { searchBoxContainer } from \"./SearchBox.style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SearchBox = function SearchBox(props) {\n  var value = props.value,\n      onFocus = props.onFocus,\n      iconName = props.iconName,\n      iconType = props.iconType,\n      iconSize = props.iconSize,\n      iconColor = props.iconColor,\n      onChangeText = props.onChangeText,\n      searchBoxText = props.searchBoxText,\n      iconComponent = props.iconComponent,\n      searchBoxWidth = props.searchBoxWidth,\n      searchBoxOnPress = props.searchBoxOnPress,\n      disableTextInput = props.disableTextInput,\n      searchBoxTextStyle = props.searchBoxTextStyle,\n      searchBoxBorderRadius = props.searchBoxBorderRadius,\n      searchBoxBackgroundColor = props.searchBoxBackgroundColor;\n\n  renderTextInput = function renderTextInput() {\n    if (disableTextInput) return _jsx(Text, {\n      style: styles.searchBoxTextStyle,\n      children: searchBoxText\n    });\n    return _jsx(TextInput, {\n      value: value,\n      onFocus: onFocus,\n      onChangeText: onChangeText,\n      placeholder: searchBoxText,\n      style: searchBoxTextStyle || styles.searchBoxTextStyle\n    });\n  };\n\n  return _jsx(TouchableOpacity, {\n    onPress: searchBoxOnPress,\n    style: searchBoxContainer(searchBoxWidth, searchBoxBorderRadius, searchBoxBackgroundColor),\n    children: _jsxs(View, {\n      style: styles.searchBoxGlue,\n      children: [iconComponent || _jsx(Icon, {\n        name: iconName,\n        type: iconType,\n        size: iconSize,\n        color: iconColor\n      }), renderTextInput()]\n    })\n  });\n};\n\nSearchBox.propTypes = {\n  iconName: PropTypes.string,\n  iconType: PropTypes.string,\n  iconColor: PropTypes.string,\n  iconSize: PropTypes.number,\n  searchBoxText: PropTypes.string,\n  disableTextInput: PropTypes.bool,\n  searchBoxBorderRadius: PropTypes.number,\n  searchBoxBackgroundColor: PropTypes.string\n};\nSearchBox.defaultProps = {\n  iconSize: 25,\n  iconName: \"search\",\n  iconColor: \"black\",\n  iconType: \"EvilIcons\",\n  disableTextInput: false,\n  searchBoxWidth: \"95%\",\n  searchBoxBorderRadius: 8,\n  searchBoxBackgroundColor: \"#f5f5f5\",\n  searchBoxText: \"What are you looking for?\"\n};\nexport default SearchBox;","map":{"version":3,"names":["React","PropTypes","Icon","styles","searchBoxContainer","SearchBox","props","value","onFocus","iconName","iconType","iconSize","iconColor","onChangeText","searchBoxText","iconComponent","searchBoxWidth","searchBoxOnPress","disableTextInput","searchBoxTextStyle","searchBoxBorderRadius","searchBoxBackgroundColor","renderTextInput","searchBoxGlue","propTypes","string","number","bool","defaultProps"],"sources":["C:/Vue Practice/RP/reactNative_projects/CloneApp/CloneApp/node_modules/react-native-header-search-bar/lib/src/components/SearchBox/SearchBox.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Icon from \"react-native-dynamic-vector-icons\";\nimport { TextInput, TouchableOpacity, Text, View } from \"react-native\";\nimport styles, { searchBoxContainer } from \"./SearchBox.style\";\n\nconst SearchBox = props => {\n  const {\n    value,\n    onFocus,\n    iconName,\n    iconType,\n    iconSize,\n    iconColor,\n    onChangeText,\n    searchBoxText,\n    iconComponent,\n    searchBoxWidth,\n    searchBoxOnPress,\n    disableTextInput,\n    searchBoxTextStyle,\n    searchBoxBorderRadius,\n    searchBoxBackgroundColor\n  } = props;\n\n  renderTextInput = () => {\n    if (disableTextInput)\n      return <Text style={styles.searchBoxTextStyle}>{searchBoxText}</Text>;\n    return (\n      <TextInput\n        value={value}\n        onFocus={onFocus}\n        onChangeText={onChangeText}\n        placeholder={searchBoxText}\n        style={searchBoxTextStyle || styles.searchBoxTextStyle}\n      />\n    );\n  };\n\n  return (\n    <TouchableOpacity\n      onPress={searchBoxOnPress}\n      style={searchBoxContainer(\n        searchBoxWidth,\n        searchBoxBorderRadius,\n        searchBoxBackgroundColor\n      )}\n    >\n      <View style={styles.searchBoxGlue}>\n        {iconComponent || (\n          <Icon\n            name={iconName}\n            type={iconType}\n            size={iconSize}\n            color={iconColor}\n          />\n        )}\n        {renderTextInput()}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nSearchBox.propTypes = {\n  iconName: PropTypes.string,\n  iconType: PropTypes.string,\n  iconColor: PropTypes.string,\n  iconSize: PropTypes.number,\n  searchBoxText: PropTypes.string,\n  disableTextInput: PropTypes.bool,\n  searchBoxBorderRadius: PropTypes.number,\n  searchBoxBackgroundColor: PropTypes.string\n};\n\nSearchBox.defaultProps = {\n  iconSize: 25,\n  iconName: \"search\",\n  iconColor: \"black\",\n  iconType: \"EvilIcons\",\n  disableTextInput: false,\n  searchBoxWidth: \"95%\",\n  searchBoxBorderRadius: 8,\n  searchBoxBackgroundColor: \"#f5f5f5\",\n  searchBoxText: \"What are you looking for?\"\n};\n\nexport default SearchBox;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,mCAAjB;;;;;AAEA,OAAOC,MAAP,IAAiBC,kBAAjB;;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;EACzB,IACEC,KADF,GAgBID,KAhBJ,CACEC,KADF;EAAA,IAEEC,OAFF,GAgBIF,KAhBJ,CAEEE,OAFF;EAAA,IAGEC,QAHF,GAgBIH,KAhBJ,CAGEG,QAHF;EAAA,IAIEC,QAJF,GAgBIJ,KAhBJ,CAIEI,QAJF;EAAA,IAKEC,QALF,GAgBIL,KAhBJ,CAKEK,QALF;EAAA,IAMEC,SANF,GAgBIN,KAhBJ,CAMEM,SANF;EAAA,IAOEC,YAPF,GAgBIP,KAhBJ,CAOEO,YAPF;EAAA,IAQEC,aARF,GAgBIR,KAhBJ,CAQEQ,aARF;EAAA,IASEC,aATF,GAgBIT,KAhBJ,CASES,aATF;EAAA,IAUEC,cAVF,GAgBIV,KAhBJ,CAUEU,cAVF;EAAA,IAWEC,gBAXF,GAgBIX,KAhBJ,CAWEW,gBAXF;EAAA,IAYEC,gBAZF,GAgBIZ,KAhBJ,CAYEY,gBAZF;EAAA,IAaEC,kBAbF,GAgBIb,KAhBJ,CAaEa,kBAbF;EAAA,IAcEC,qBAdF,GAgBId,KAhBJ,CAcEc,qBAdF;EAAA,IAeEC,wBAfF,GAgBIf,KAhBJ,CAeEe,wBAfF;;EAkBAC,eAAe,GAAG,2BAAM;IACtB,IAAIJ,gBAAJ,EACE,OAAO,KAAC,IAAD;MAAM,KAAK,EAAEf,MAAM,CAACgB,kBAApB;MAAA,UAAyCL;IAAzC,EAAP;IACF,OACE,KAAC,SAAD;MACE,KAAK,EAAEP,KADT;MAEE,OAAO,EAAEC,OAFX;MAGE,YAAY,EAAEK,YAHhB;MAIE,WAAW,EAAEC,aAJf;MAKE,KAAK,EAAEK,kBAAkB,IAAIhB,MAAM,CAACgB;IALtC,EADF;EASD,CAZD;;EAcA,OACE,KAAC,gBAAD;IACE,OAAO,EAAEF,gBADX;IAEE,KAAK,EAAEb,kBAAkB,CACvBY,cADuB,EAEvBI,qBAFuB,EAGvBC,wBAHuB,CAF3B;IAAA,UAQE,MAAC,IAAD;MAAM,KAAK,EAAElB,MAAM,CAACoB,aAApB;MAAA,WACGR,aAAa,IACZ,KAAC,IAAD;QACE,IAAI,EAAEN,QADR;QAEE,IAAI,EAAEC,QAFR;QAGE,IAAI,EAAEC,QAHR;QAIE,KAAK,EAAEC;MAJT,EAFJ,EASGU,eAAe,EATlB;IAAA;EARF,EADF;AAsBD,CAvDD;;AAyDAjB,SAAS,CAACmB,SAAV,GAAsB;EACpBf,QAAQ,EAAER,SAAS,CAACwB,MADA;EAEpBf,QAAQ,EAAET,SAAS,CAACwB,MAFA;EAGpBb,SAAS,EAAEX,SAAS,CAACwB,MAHD;EAIpBd,QAAQ,EAAEV,SAAS,CAACyB,MAJA;EAKpBZ,aAAa,EAAEb,SAAS,CAACwB,MALL;EAMpBP,gBAAgB,EAAEjB,SAAS,CAAC0B,IANR;EAOpBP,qBAAqB,EAAEnB,SAAS,CAACyB,MAPb;EAQpBL,wBAAwB,EAAEpB,SAAS,CAACwB;AARhB,CAAtB;AAWApB,SAAS,CAACuB,YAAV,GAAyB;EACvBjB,QAAQ,EAAE,EADa;EAEvBF,QAAQ,EAAE,QAFa;EAGvBG,SAAS,EAAE,OAHY;EAIvBF,QAAQ,EAAE,WAJa;EAKvBQ,gBAAgB,EAAE,KALK;EAMvBF,cAAc,EAAE,KANO;EAOvBI,qBAAqB,EAAE,CAPA;EAQvBC,wBAAwB,EAAE,SARH;EASvBP,aAAa,EAAE;AATQ,CAAzB;AAYA,eAAeT,SAAf"},"metadata":{},"sourceType":"module"}